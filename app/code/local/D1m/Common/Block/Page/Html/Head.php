<?php
/**
 *  1)允许为静态文件(css,js等)添加随机 query string[允许通过XML配置的方式来添加]
 *  2)允许使用 标识的方式来添加外链接JS,CSS
 * Class D1m_Common_Block_Page_Html_Head
 */
class D1m_Common_Block_Page_Html_Head extends Mage_Page_Block_Html_Head
{
    /*** ########################################################################################################################################################################
     *
     *   为静态文件添加后缀随机数
     *
     *   ########################################################################################################################################################################
     */
    /**
     *  是否允许 URL 后缀
     * @return bool
     */
    public function isUrlSuffixEnabled()
    {
        return Mage::getStoreConfigFlag('web/suffix_js_css/enable');
    }

    /***
     * 是否允许以最后一个修改时间来作为后缀
     * @return bool
     */
    public function isUrlSuffixAutoGenerated()
    {
        return Mage::getStoreConfigFlag('web/suffix_js_css/auto');
    }

    /**
     * 使用固定的后缀(为JS,CSS）
     * @return mixed
     */
    public function getUrlSuffix()
    {
        return Mage::getStoreConfig('web/suffix_js_css/suffix');
    }

    protected function &_prepareStaticAndSkinElements($format, array $staticItems, array $skinItems, $mergeCallback = null)
    {
        $designPackage = Mage::getDesign();
        $baseJsUrl = Mage::getBaseUrl('js');
        $items = array();
        if ($mergeCallback && !is_callable($mergeCallback)) {
            $mergeCallback = null;
        }

        // get static files from the js folder, no need in lookups
        foreach ($staticItems as $params => $rows) {
            foreach ($rows as $name) {
                $items[$params][] = $mergeCallback ? Mage::getBaseDir() . DS . 'js' . DS . $name : $baseJsUrl . $name;
            }
        }

        // lookup each file basing on current theme configuration
        foreach ($skinItems as $params => $rows) {
            foreach ($rows as $name) {
                $items[$params][] = $mergeCallback ? $designPackage->getFilename($name, array('_type' => 'skin'))
                    : $designPackage->getSkinUrl($name, array());
            }
        }

        $html = '';
        foreach ($items as $params => $rows) {
            // attempt to merge
            $mergedUrl = false;
            if ($mergeCallback) {
                $mergedUrl = call_user_func($mergeCallback, $rows);
            }
            // render elements
            $params = trim($params);
            $params = $params ? ' ' . $params : '';
            if ($mergedUrl) {
                if ($this->isUrlSuffixEnabled()) {
                    if ($this->isUrlSuffixAutoGenerated()) {
                        $suffix = $this->_getFileModificationTimeFromUrl($mergedUrl);
                    } else {
                        $suffix = $this->getUrlSuffix();
                    }
                    $mergedUrl .= '?q=' . urlencode($suffix);
                }
                $html .= sprintf($format, $mergedUrl, $params);
            } else {
                foreach ($rows as $src) {
                    if ($this->isUrlSuffixEnabled()) {
                        if ($this->isUrlSuffixAutoGenerated()) {
                            $suffix = $this->_getFileModificationTimeFromUrl($src);
                        } else {
                            $suffix = $this->getUrlSuffix();
                        }
                        $src .= '?q=' . urlencode($suffix);
                    }
                    $html .= sprintf($format, $src, $params);
                }
            }
        }
        return $html;
    }

    /**
     * @param $url
     * @return int|mixed
     */
    protected function _getFileModificationTimeFromUrl($url)
    {
        $baseUrl = preg_replace('#https?://#', '', Mage::getBaseUrl());
        $url = preg_replace('#https?://#', '', $url);
        $file = Mage::getBaseDir() . DS . trim(str_replace($baseUrl, '', $url), DS);

        return file_exists($file) ? filemtime($file) : $this->getUrlSuffix();
    }



   /*** ########################################################################################################################################################################
    *
    *   扩展head可添加的类型
    *
    * <reference name="head">
    *  add css js
    *  <action method="addItem"><type>external_css</type><name>http://developer.yahoo.com/yui/build/reset/reset.css</name><params/></action>
    *  <action method="addItem"><type>external_js</type><name>http://yui.yahooapis.com/2.8.2r1/build/yahoo-dom-event/yahoo-dom-event.js</name><params/></action>
    *   <action method="addExternalItem"><type>external_js</type><name>http://yui.yahooapis.com/2.8.2r1/build/imageloader/imageloader-min.js</name><params/></action>
    *   <action method="addExternalItem"><type>external_css</type><name>http://yui.yahooapis.com/2.8.2r1/build/fonts/fonts-min.css</name><params/></action>

    *
    *  remove css js
    * <action method="removeItem"><type>external_css</type><name>http://developer.yahoo.com/yui/build/reset/reset.css</name><params/></action>
    *<action method="removeItem"><type>external_js</type><name>http://yui.yahooapis.com/2.8.2r1/build/yahoo-dom-event/yahoo-dom-event.js</name><params/></action>
    *<action method="removeExternalItem"><type>external_js</type><name>http://yui.yahooapis.com/2.8.2r1/build/imageloader/imageloader-min.js</name><params/></action>
    *<action method="removeExternalItem"><type>external_css</type><name>http://yui.yahooapis.com/2.8.2r1/build/fonts/fonts-min.css</name><params/></action>
    * </reference>
    *
    *   ########################################################################################################################################################################
    */
    /**
     * Add HEAD External Item
     *
     * Allowed types:
     *  - js
     *  - js_css
     *  - skin_js
     *  - skin_css
     *  - rss
     *
     * @param string $type
     * @param string $name
     * @param string $params
     * @param string $if
     * @param string $cond
     * @return Mage_Page_Block_Html_Head
     */
    public function addExternalItem($type, $name, $params=null, $if=null, $cond=null)
    {
        parent::addItem($type, $name, $params=null, $if=null, $cond=null);
    }

    /**
     * Remove External Item from HEAD entity
     *
     * @param string $type
     * @param string $name
     * @return Mage_Page_Block_Html_Head
     */
    public function removeExternalItem($type, $name)
    {
        parent::removeItem($type, $name);
    }

    /**
     * Classify HTML head item and queue it into "lines" array
     *
     * @see self::getCssJsHtml()
     * @param array &$lines
     * @param string $itemIf
     * @param string $itemType
     * @param string $itemParams
     * @param string $itemName
     * @param array $itemThe
     */
    protected function _separateOtherHtmlHeadElements(&$lines, $itemIf, $itemType, $itemParams, $itemName, $itemThe)
    {
        $params = $itemParams ? ' ' . $itemParams : '';
        $href   = $itemName;

        switch ($itemType) {
            case 'rss':
                $lines[$itemIf]['other'][] = sprintf('<link href="%s"%s rel="alternate" type="application/rss+xml" />',
                    $href, $params
                );
                break;
            case 'link_rel':
                $lines[$itemIf]['other'][] = sprintf('<link%s href="%s" />', $params, $href);
                break;

            case 'external_js':
                $lines[$itemIf]['other'][] = sprintf('<script type="text/javascript" src="%s" %s></script>', $href, $params);
                break;

            case 'external_css':
                $lines[$itemIf]['other'][] = sprintf('<link rel="stylesheet" type="text/css" href="%s" %s/>', $href, $params);
                break;
        }
    }
}